// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using FerreteriaEntities.Entities;
using Microsoft.EntityFrameworkCore;

namespace FerreteriaDataAccess.Context;

public partial class dbFerreteriaContext : DbContext
{
    public dbFerreteriaContext()
    {

    }
    public dbFerreteriaContext(DbContextOptions<dbFerreteriaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<tbCargos> tbCargos { get; set; }

    public virtual DbSet<tbCategorias> tbCategorias { get; set; }

    public virtual DbSet<tbClientes> tbClientes { get; set; }

    public virtual DbSet<tbCompras> tbCompras { get; set; }

    public virtual DbSet<tbComprasDetalles> tbComprasDetalles { get; set; }

    public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }

    public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }

    public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }

    public virtual DbSet<tbMarcas> tbMarcas { get; set; }

    public virtual DbSet<tbMedidas> tbMedidas { get; set; }

    public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }

    public virtual DbSet<tbPantallas> tbPantallas { get; set; }

    public virtual DbSet<tbPantallasPorRol> tbPantallasPorRol { get; set; }

    public virtual DbSet<tbProductos> tbProductos { get; set; }

    public virtual DbSet<tbProveedores> tbProveedores { get; set; }

    public virtual DbSet<tbRoles> tbRoles { get; set; }

    public virtual DbSet<tbSucursales> tbSucursales { get; set; }

    public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

    public virtual DbSet<tbVentas> tbVentas { get; set; }

    public virtual DbSet<tbVentasDetalles> tbVentasDetalles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<tbCargos>(entity =>
        {
            entity.HasKey(e => e.Carg_Id).HasName("PK_Gral_tbCargos_Carg_Id");

            entity.ToTable("tbCargos", "Ferr");

            entity.Property(e => e.Carg_Descripcion)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.Carg_Estado).HasDefaultValue(true);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCargosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbCargos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCargosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbCargos_Carg_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbCategorias>(entity =>
        {
            entity.HasKey(e => e.Cate_Id).HasName("PK_Prod_tbCategorias_Cate_Id");

            entity.ToTable("tbCategorias", "Prod");

            entity.Property(e => e.Cate_Descripcion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Cate_Estado).HasDefaultValue(true);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCategoriasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbCategorias_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCategoriasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Prod_tbCategorias_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbClientes>(entity =>
        {
            entity.HasKey(e => e.Clie_Id).HasName("PK_Gral_tbCLientes_Clie_Id");

            entity.ToTable("tbClientes", "Gral");

            entity.HasIndex(e => e.Clie_DNI, "UQ__tbClient__0DCB410DE12C57F6").IsUnique();

            entity.Property(e => e.Clie_Apellido)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Clie_DNI)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Clie_Direccion)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Clie_Estado).HasDefaultValue(true);
            entity.Property(e => e.Clie_Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Clie_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);

            //entity.HasOne(d => d.EsCv).WithMany(p => p.tbClientes)
            //    .HasForeignKey(d => d.EsCv_Id)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_Gral_tbClientes_Gral_tbEstadosCiviles_EsCv_Id");

            entity.HasOne(d => d.Muni_CodigoNavigation).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.Muni_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbClientes_Gral_tbMunicipios_Muni_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbClientesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbClientes_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbClientesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbClientes_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbCompras>(entity =>
        {
            entity.HasKey(e => e.Comp_Id).HasName("PK_Comp_tbCompras_Comp_Id");

            entity.ToTable("tbCompras", "Comp");

            entity.Property(e => e.Comp_Estado).HasDefaultValue(true);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Prov).WithMany(p => p.tbCompras)
                .HasForeignKey(d => d.Prov_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbCompras_Prov_Id_Comp_tbProveedores_Prov_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbComprasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbCompras_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbComprasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Comp_tbCompras_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbComprasDetalles>(entity =>
        {
            entity.HasKey(e => e.CpDe_Id).HasName("PK_Comp_tbComprasDetalles_CpDe_Id");

            entity.ToTable("tbComprasDetalles", "Comp");

            entity.Property(e => e.CpDe_Estado).HasDefaultValue(true);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Comp).WithMany(p => p.tbComprasDetalles)
                .HasForeignKey(d => d.Comp_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbComprasDetalles_Comp_Id_Comp_tbCompras");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbComprasDetalles)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbComprasDetalles_Prod_Id_Prod_tbProductos_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbComprasDetallesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbComprasDetalles_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbComprasDetallesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Comp_tbComprasDetalles_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbDepartamentos>(entity =>
        {
            entity.HasKey(e => e.Depa_Codigo).HasName("PK_Gral_tbDepartamentos_Depa_Codigo");

            entity.ToTable("tbDepartamentos", "Gral");

            entity.Property(e => e.Depa_Codigo)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Depa_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbDepartamentosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbDepartamentos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbDepartamentosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbDepartamentos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbEmpleados>(entity =>
        {
            entity.HasKey(e => e.Empl_Id).HasName("PK_Ferr_tbEmpleados_Empl_Id");

            entity.ToTable("tbEmpleados", "Ferr");

            entity.HasIndex(e => e.Empl_DNI, "UQ__tbEmplea__44CE58E20866DC5E").IsUnique();

            entity.Property(e => e.Empl_Apellido)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Empl_DNI)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Empl_Direccion)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Empl_Estado).HasDefaultValue(true);
            entity.Property(e => e.Empl_Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Empl_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);

            entity.HasOne(d => d.Carg).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Carg_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ferr_tbEmpleados_Carg_Id_Ferr_tbCargos_Carg_Id");

            //entity.HasOne(d => d.EsCv).WithMany(p => p.tbEmpleados)
            //    .HasForeignKey(d => d.EsCv_Id)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_Ferr_tbEmpleados_EsCv_Id_Gral_tbEstadosCiviles_EsCv_Id");

            entity.HasOne(d => d.Muni_CodigoNavigation).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Muni_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ferr_tbEmpleados_Muni_Codigo_Gral_tbMunicipios_Muni_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbEmpleadosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ferr_tbEmpleados_Empl_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbEmpleadosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Ferr_tbEmpleados_Empl_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbEstadosCiviles>(entity =>
        {
            entity.HasKey(e => e.EsCv_Id).HasName("PK_Gral_tbEstadosCiviles_EsCv_Id");

            entity.ToTable("tbEstadosCiviles", "Gral");

            entity.Property(e => e.EsCv_Descripcion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");

            //entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbEstadosCivilesUsua_CreacionNavigation)
            //    .HasForeignKey(d => d.Usua_Creacion)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_Gral_tbEstadosCiviles_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            //entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbEstadosCivilesUsua_ModificacionNavigation)
            //    .HasForeignKey(d => d.Usua_Modificacion)
            //    .HasConstraintName("FK_Gral_tbEstadosCiviles_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbMarcas>(entity =>
        {
            entity.HasKey(e => e.Marc_Id).HasName("PK_Prod_tbMarcas_Marc_Id");

            entity.ToTable("tbMarcas", "Prod");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Marc_Descripcion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Marc_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbMarcasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbMarcas_Marc_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbMarcasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Prod_tbMarcas_Marc_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbMedidas>(entity =>
        {
            entity.HasKey(e => e.Medi_Id).HasName("PK_Prod_tbMedidas_Medi_Id");

            entity.ToTable("tbMedidas", "Prod");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Medi_Descripcion)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Medi_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbMedidasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbMedidas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbMedidasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Prod_tbMedidas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbMunicipios>(entity =>
        {
            entity.HasKey(e => e.Muni_Codigo).HasName("PK_Gral_tbMunicipios_Muni_Codigo");

            entity.ToTable("tbMunicipios", "Gral");

            entity.Property(e => e.Muni_Codigo)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Depa_Codigo)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_Descripcion)
                .IsRequired()
                .HasMaxLength(50);

            //entity.HasOne(d => d.Depa_CodigoNavigation).WithMany(p => p.tbMunicipios)
            //    .HasForeignKey(d => d.Depa_Codigo)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_Gral_tbMunicipios_Depa_Codigo_Gral_tbDepartamentos_Depa_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbMunicipiosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbMunicipios_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbMunicipiosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbMunicipios_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPantallas>(entity =>
        {
            entity.HasKey(e => e.Pant_Id).HasName("PK_Acce_tbPantallas_Pant_Id");

            entity.ToTable("tbPantallas", "Acce");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Pant_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPantallasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbPantallas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPantallasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Acce_tbPantallas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPantallasPorRol>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbPantallasPorRol", "Acce");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.RoPa_Estado).HasDefaultValue(true);
            entity.Property(e => e.RoPa_Id).ValueGeneratedOnAdd();

            entity.HasOne(d => d.Pant).WithMany()
                .HasForeignKey(d => d.Pant_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("PK_Acce_tbRolesPorPantalla_Pant_Id_Acce_tbPants_Pant_Id");

            entity.HasOne(d => d.Role).WithMany()
                .HasForeignKey(d => d.Role_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("PK_Acce_tbRolesPorPantalla_Acce_tbRoles_Role_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany()
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_RolesPorPantalla_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany()
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Acce_RolesPorPantalla_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbProductos>(entity =>
        {
            entity.HasKey(e => e.Prod_Id).HasName("PK_Prod_tbProductos_Prod_Id");

            entity.ToTable("tbProductos", "Prod");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Prod_Descripcion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Prod_Estado).HasDefaultValue(true);
            entity.Property(e => e.Prod_Modelo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Prod_URLImg).IsUnicode(false);

            entity.HasOne(d => d.Cate).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Cate_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbProductos_Cate_Id_Prod_tbCategorias_Cate_Id");

            entity.HasOne(d => d.Marc).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Marc_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbProductos_Marc_Id_Prod_tbMarcas_Marc_Id");

            entity.HasOne(d => d.Medi).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Medi_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbProductos_Medi_Id_Prod_tbMedidas_Medi_Id");

            entity.HasOne(d => d.Prov).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Prov_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbProductos_Prov_Id_Comp_tbProveedores_Prov_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbProductosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Prod_tbProductos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbProductosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Prod_tbProductos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbProveedores>(entity =>
        {
            entity.HasKey(e => e.Prov_Id).HasName("PK_Comp_tbProveedores_Prov_Id");

            entity.ToTable("tbProveedores", "Comp");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Prov_Contacto)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.Prov_DireccionExacta)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Prov_Estado).HasDefaultValue(true);
            entity.Property(e => e.Prov_Nombre)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Muni_CodigoNavigation).WithMany(p => p.tbProveedores)
                .HasForeignKey(d => d.Muni_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbProveedores_Muni_Codigo_Gral_tbMunicipios_Muni_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbProveedoresUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comp_tbProveedores_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbProveedoresUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Comp_tbProveedores_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbRoles>(entity =>
        {
            entity.HasKey(e => e.Role_Id).HasName("PK_Acce_tbRoles_Role_Id");

            entity.ToTable("tbRoles", "Acce");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Role_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Role_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbRolesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbRoles_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbRolesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Acce_tbRoles_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbSucursales>(entity =>
        {
            entity.HasKey(e => e.Sucu_Id).HasName("PK_Gral_tbSucursales_Sucu_Id");

            entity.ToTable("tbSucursales", "Ferr");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Sucu_DireccionExacta)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Sucu_Estado).HasDefaultValue(true);
            entity.Property(e => e.Sucu_Nombre)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Muni_CodigoNavigation).WithMany(p => p.tbSucursales)
                .HasForeignKey(d => d.Muni_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbSucursales_Muni_Codigo_Gral_tb_Municipios_Muni_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbSucursalesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbSucursales_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbSucursalesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbSucursales_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbUsuarios>(entity =>
        {
            entity.HasKey(e => e.Usua_Id).HasName("PK_Acce_tbUsuarios_Usua_Id");

            entity.ToTable("tbUsuarios", "Acce");

            entity.HasIndex(e => e.Usua_Nombre, "UQ__tbUsuari__66507CF628BA30FB").IsUnique();

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Usua_Clave)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Usua_EsAdmin).HasDefaultValue(false);
            entity.Property(e => e.Usua_Estado).HasDefaultValue(true);
            entity.Property(e => e.Usua_Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Empl).WithMany(p => p.tbUsuarios)
                .HasForeignKey(d => d.Empl_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbUsuarios_Ferr_tbEmpleados");

            entity.HasOne(d => d.Role).WithMany(p => p.tbUsuarios)
                .HasForeignKey(d => d.Role_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbUsuarios_Acce_tbRoles");
        });

        modelBuilder.Entity<tbVentas>(entity =>
        {
            entity.HasKey(e => e.Vent_Id).HasName("PK_Vent_tbVentas_Vent_Id");

            entity.ToTable("tbVentas", "Vent");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Vent_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Clie).WithMany(p => p.tbVentas)
                .HasForeignKey(d => d.Clie_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vent_tbVentas_Clie_Id_Clie_tbClientes_Clie_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbVentasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vent_tbVentas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbVentasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vent_tbVentas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbVentasDetalles>(entity =>
        {
            entity.HasKey(e => e.VtDe_Id).HasName("PK_Vent_tbVentasDetalles_VtDe_Id");

            entity.ToTable("tbVentasDetalles", "Vent");

            entity.Property(e => e.Feca_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Feca_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.VtDe_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Prod).WithMany(p => p.tbVentasDetalles)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vent_tbVentasDetalles_Prod_Id_Prod_tbProductos_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbVentasDetallesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vent_tbVentasDetalles_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbVentasDetallesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vent_tbVentasDetalles_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Vent).WithMany(p => p.tbVentasDetalles)
                .HasForeignKey(d => d.Vent_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vent_tbVentasDetalles_Vent_Id_Vent_tbVentas_Vent_Id");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}